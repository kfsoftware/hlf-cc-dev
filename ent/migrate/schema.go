// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChaincodesColumns holds the columns for the "chaincodes" table.
	ChaincodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "package_id", Type: field.TypeString},
		{Name: "channel_id", Type: field.TypeString},
		{Name: "tenant_chaincodes", Type: field.TypeInt, Nullable: true},
	}
	// ChaincodesTable holds the schema information for the "chaincodes" table.
	ChaincodesTable = &schema.Table{
		Name:       "chaincodes",
		Columns:    ChaincodesColumns,
		PrimaryKey: []*schema.Column{ChaincodesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "chaincodes_tenants_chaincodes",
				Columns:    []*schema.Column{ChaincodesColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TenantsColumns holds the columns for the "tenants" table.
	TenantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "msp_id", Type: field.TypeString},
		{Name: "sign_cert_ca_private_key", Type: field.TypeBytes, Nullable: true},
		{Name: "sign_cert_ca_cert", Type: field.TypeBytes, Nullable: true},
		{Name: "tls_cert_ca_private_key", Type: field.TypeBytes, Nullable: true},
		{Name: "tls_cert_ca_cert", Type: field.TypeBytes, Nullable: true},
	}
	// TenantsTable holds the schema information for the "tenants" table.
	TenantsTable = &schema.Table{
		Name:       "tenants",
		Columns:    TenantsColumns,
		PrimaryKey: []*schema.Column{TenantsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChaincodesTable,
		TenantsTable,
	}
)

func init() {
	ChaincodesTable.ForeignKeys[0].RefTable = TenantsTable
}
