// Code generated by entc, DO NOT EDIT.

package chaincode

const (
	// Label holds the string label denoting the chaincode type in the database.
	Label = "chaincode"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPackageId holds the string denoting the packageid field in the database.
	FieldPackageId = "package_id"
	// FieldChannelId holds the string denoting the channelid field in the database.
	FieldChannelId = "channel_id"
	// EdgeTenant holds the string denoting the tenant edge name in mutations.
	EdgeTenant = "tenant"
	// Table holds the table name of the chaincode in the database.
	Table = "chaincodes"
	// TenantTable is the table that holds the tenant relation/edge.
	TenantTable = "chaincodes"
	// TenantInverseTable is the table name for the Tenant entity.
	// It exists in this package in order to avoid circular dependency with the "tenant" package.
	TenantInverseTable = "tenants"
	// TenantColumn is the table column denoting the tenant relation/edge.
	TenantColumn = "tenant_chaincodes"
)

// Columns holds all SQL columns for chaincode fields.
var Columns = []string{
	FieldID,
	FieldPackageId,
	FieldChannelId,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "chaincodes"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"tenant_chaincodes",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// PackageIdValidator is a validator for the "packageId" field. It is called by the builders before save.
	PackageIdValidator func(string) error
)
